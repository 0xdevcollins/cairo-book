name: CI

on:
  push:
    branches:
      - ci/dependency-caching 
  pull_request:
    branches:
      - main

jobs:
  compile_and_verify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm and node modules
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Create package.json if not exists
        run: |
          if [ ! -f package.json ]; then
            echo '{"name": "cairo-book", "version": "1.0.0", "private": true}' > package.json
          fi

      - name: Install dependencies
        run: pnpm install

      - name: Cache asdf tools
        uses: actions/cache@v3
        id: asdf-cache
        with:
          path: |
            ~/.asdf
            ~/.cache/scarb
            ~/.cache/starknet-foundry
          key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Install asdf & tools
        uses: asdf-vm/actions/install@v3
        if: steps.asdf-cache.outputs.cache-hit != 'true'

      - name: Set default scarb version
        run: asdf global scarb $(grep scarb .tool-versions | cut -d ' ' -f 2 | head -n 1)

      - name: Setup Starknet-Foundry
        uses: foundry-rs/setup-snfoundry@v3

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-

      - name: Setup Rust cache
        uses: ./.github/workflows/setup-rust-cache

      - name: Cache mdbook dependencies
        uses: actions/cache@v3
        id: mdbook-cache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ~/.cargo/bin
            mdbook-quiz-cairo
            ~/.local/bin
          key: ${{ runner.os }}-mdbook-${{ hashFiles('**/Cargo.lock', '**/pnpm-lock.yaml', 'mdbook-quiz-cairo/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-mdbook-

      - name: Install mdbook
        uses: ./.github/workflows/install-mdbook
        if: steps.mdbook-cache.outputs.cache-hit != 'true'

      - name: Build book (English)
        run: mdbook build -d book

      - name: Install cairo-listings
        run: cargo install --path cairo-listings --locked
        shell: bash

      - name: Run cairo-listings and generate summary
        run: cairo-listings verify >> $GITHUB_STEP_SUMMARY
        shell: bash

  typos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@master